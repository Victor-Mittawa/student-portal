rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.userType == 'admin';
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    function getUserType() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.userType;
    }

    match /users/{userId} {
      allow read, update: if request.auth != null &&
        (isOwner(userId) || isAdmin());
      
      allow create: if request.auth != null && (
        isOwner(userId) || 
        (isAdmin() && userId != request.auth.uid)
      ) &&
      request.resource.data.keys().hasAll(['uid', 'userType']);
    }

    match /results/{resultId} {
      allow create: if request.auth != null && isAdmin();
      allow read: if request.auth != null;
      allow update, delete: if false;
    }

    match /payments/{paymentId} {
      allow read: if request.auth != null &&
        (resource.data.userId == request.auth.uid || isAdmin());
      
      allow write: if request.auth != null &&
        (
          (request.resource.data.userId == request.auth.uid && 
           getUserType() == 'student') ||
          isAdmin()
        );
    }

    match /courses/{courseId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }

    match /students/{studentId} {
      allow create: if request.auth != null && 
        isOwner(studentId) &&
        request.resource.data.keys().hasAll([
          'uid', 'fullName', 'age', 'gender',
          'course', 'department', 'level',
          'enrollmentYear', 'status'
        ]) &&
        (
          request.resource.data.keys().hasAny(['email', 'phone']) &&
          (request.resource.data.email is string || 
           request.resource.data.phone is string)
        );

      allow read: if request.auth != null && 
        (isOwner(studentId) || isAdmin());

      allow update: if request.auth != null &&
        isOwner(studentId) &&
        request.resource.data.diff(resource.data).affectedKeys()
          .hasOnly(['phone', 'profileImage', 'contactInfo']);

      allow read, update: if isAdmin();
    }

    match /phone_auth/{document=**} {
      allow read: if request.auth != null && isOwner(document);
      allow write: if false;
    }
  }
}